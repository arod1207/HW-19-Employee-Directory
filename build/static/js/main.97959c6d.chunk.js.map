{"version":3,"sources":["components/Employees.jsx","components/SearchBar.jsx","App.js","index.js"],"names":["Employees","props","className","src","people","picture","large","alt","name","first","last","email","phone","SearchBar","useState","employees","setEmployees","search","setSearch","useEffect","axios","get","then","res","data","results","catch","err","console","log","employeeComponent","filter","employee","toLowerCase","includes","map","key","type","placeholder","onChange","e","target","value","onClick","sort","a","b","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kQAmBeA,MAff,SAAmBC,GACf,OACI,yBAAKC,UAAU,iBACX,yBAAKC,IAAKF,EAAMG,OAAOC,QAAQC,MAAOC,IAAI,QAC1C,4BACKN,EAAMG,OAAOI,KAAKC,MADvB,IAC+BR,EAAMG,OAAOI,KAAKE,MAEjD,sCACYT,EAAMG,OAAOO,MADzB,IACgC,6BADhC,UAEYV,EAAMG,OAAOQ,SCwDtBC,MA/Df,WAAqB,MAEiBC,mBAAS,IAF1B,mBAEVC,EAFU,KAECC,EAFD,OAIWF,mBAAS,IAJpB,mBAIVG,EAJU,KAIFC,EAJE,KAOjBC,qBAAU,WACNC,IACKC,IAAI,4DACJC,MAAK,SAACC,GACHP,EAAaO,EAAIC,KAAKC,YAEzBC,OAAM,SAACC,GACJC,QAAQC,IAAIF,QAErB,CAACV,IAGJ,IAKMa,EALSf,EAAUgB,QAAO,SAACC,GAC7B,OAAOA,EAASxB,KAAKC,MAAMwB,cAAcC,SAASjB,EAAOgB,kBAI5BE,KAAI,SAAC/B,GAAD,OACjC,kBAAC,EAAD,CAAWgC,IAAKhC,EAAOI,KAAKC,MAAOL,OAAQA,OAc/C,OACI,6BACI,yBAAKF,UAAU,wBACX,wBAAIA,UAAU,SAAd,sBACA,yBAAKA,UAAU,cACX,2BACIA,UAAU,aACVmC,KAAK,OACLC,YAAY,SAEZC,SAAU,SAACC,GAAD,OAAOtB,EAAUsB,EAAEC,OAAOC,WAG5C,4BAAQxC,UAAU,kBAAkByC,QAxB7B,kBACf5B,EAAU6B,MAAK,SAAUC,EAAGC,GACxB,OAAID,EAAErC,KAAKE,KAAOoC,EAAEtC,KAAKE,MACb,EAERmC,EAAErC,KAAKE,KAAOoC,EAAEtC,KAAKE,KACd,EAEJ,OAgBH,8BAMHoB,IClDEiB,MARf,WACI,OACI,yBAAK7C,UAAU,OACX,kBAAC,EAAD,Q,MCJZ8C,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAAC,EAAD,OAEJC,SAASC,eAAe,W","file":"static/js/main.97959c6d.chunk.js","sourcesContent":["import React from 'react';\nimport '../App.css';\n\n// brought in the props from Searchbar //\nfunction Employees(props) {\n    return (\n        <div className=\"employee-card\">\n            <img src={props.people.picture.large} alt=\"...\" />\n            <h3>\n                {props.people.name.first} {props.people.name.last}\n            </h3>\n            <h5>\n                Email: {props.people.email} <br />\n                Phone: {props.people.phone}\n            </h5>\n        </div>\n    );\n}\n\nexport default Employees;\n","import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport '../App.css';\n\nimport Employees from './Employees';\n\nfunction SearchBar() {\n    // setEmployees was used to get the data from the api and set the data in the employees state //\n    const [employees, setEmployees] = useState([]);\n    // setSearch was started as a empty string and used run in the input to recieve the value of the input and store it in the search //\n    const [search, setSearch] = useState('');\n\n    // useEffect was left with only the search  so the api call would only be made during a search //\n    useEffect(() => {\n        axios\n            .get('https://randomuser.me/api/?nat=us&results=20&seed=foobar')\n            .then((res) => {\n                setEmployees(res.data.results);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [search]);\n\n    // setup a filter method to loop through the setState from employees and then set everything to lowercase, passed in the search from setState //\n    const filter = employees.filter((employee) => {\n        return employee.name.first.toLowerCase().includes(search.toLowerCase());\n    });\n\n    // passed the filter variable into the map method then added props to render the Employee Component //\n    const employeeComponent = filter.map((people) => (\n        <Employees key={people.name.first} people={people} />\n    ));\n\n    const alphaOrder = () =>\n        employees.sort(function (a, b) {\n            if (a.name.last < b.name.last) {\n                return -1;\n            }\n            if (a.name.last > b.name.last) {\n                return 1;\n            }\n            return 0;\n        });\n\n    return (\n        <div>\n            <div className=\"jumbotron search-bar\">\n                <h1 className=\"title\">Employee Directory</h1>\n                <div className=\"form-group\">\n                    <input\n                        className=\"form-input\"\n                        type=\"text\"\n                        placeholder=\"Search\"\n                        // created an onChange event to handle the setSearch, then setSearch passes the value to search\n                        onChange={(e) => setSearch(e.target.value)}\n                    ></input>\n                </div>\n                <button className=\"btn btn-primary\" onClick={alphaOrder}>\n                    Sort Names in Alpha Order\n                </button>\n            </div>\n\n            {/* Past in the employeeComponent variable created with the map method  */}\n            {employeeComponent}\n        </div>\n    );\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport './App.css';\n\n// imported Search Bar Component //\nimport SearchBar from './components/SearchBar';\n\nfunction App() {\n    return (\n        <div className=\"App\">\n            <SearchBar />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}